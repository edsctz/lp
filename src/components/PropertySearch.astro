---
---

<section id="imoveis" class="py-16 bg-white">
  <div class="container mx-auto px-4 md:px-6">
    <div class="text-center mb-12">
      <h2 class="text-3xl font-bold text-c21-grey mb-4">Encontraremos seu Imóvel Ideal</h2>
      <p class="text-c21-medium-grey max-w-3xl mx-auto">
        Conte o que é um imóvel perfeito para você e sua família em Alphaville e iremos apresentar as melhores opções.
      </p>
    </div>
    
    <div class="bg-white rounded-lg shadow-lg p-6 md:p-8 max-w-5xl mx-auto">
      <!-- Step 1: Property Search Form -->
      <form id="property-search-step1" class="grid grid-cols-1 md:grid-cols-4 gap-4">
        <div class="mb-4 md:mb-0">
          <label for="property-type" class="block text-sm font-medium text-c21-grey mb-2">Tipo de Imóvel</label>
          <select id="property-type" class="w-full px-4 py-3 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors bg-white">
            <option value="">Todos os tipos</option>
            <option value="casa">Casa</option>
            <option value="apartamento">Apartamento</option>
            <option value="terreno">Terreno</option>
            <option value="comercial">Comercial</option>
          </select>
        </div>
        
        <div class="mb-4 md:mb-0">
          <label for="neighborhood" class="block text-sm font-medium text-c21-grey mb-2">Bairro</label>
          <select id="neighborhood" class="w-full px-4 py-3 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors bg-white">
            <option value="">Todos os bairros</option>
            <option value="alphaville">Alphaville</option>
            <option value="tamboré">Tamboré</option>
            <option value="aldeiadaserra">Aldeia da Serra</option>
            <option value="outros">Outros</option>
          </select>
        </div>
        
        <div>
          <label class="block text-sm font-medium text-c21-grey mb-2">Opção</label>
          <div class="grid grid-cols-2 gap-2 h-[46px]">
            <label class="flex items-center justify-center px-3 py-2 bg-white border border-gray-200 rounded cursor-pointer hover:bg-c21-dark-gold transition-colors">
              <input type="radio" name="transaction-type" value="buy" class="sr-only" checked />
              <span class="text-sm font-medium property-option" data-value="buy">Comprar</span>
            </label>
            <label class="flex items-center justify-center px-3 py-2 bg-white border border-gray-200 rounded cursor-pointer hover:bg-c21-dark-gold transition-colors">
              <input type="radio" name="transaction-type" value="rent" class="sr-only" />
              <span class="text-sm font-medium property-option" data-value="rent">Alugar</span>
            </label>
          </div>
        </div>
        
        <div class="mb-4 md:mb-0">
          <label for="price-range" class="block text-sm font-medium text-c21-grey mb-2">Faixa de Preço</label>
          <select id="price-range-buy" class="w-full px-4 py-3 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors bg-white">
            <option value="">Qualquer preço</option>
            <option value="0-500000">Até R$ 500.000</option>
            <option value="500000-1000000">R$ 500.000 - R$ 1.000.000</option>
            <option value="1000000-2000000">R$ 1.000.000 - R$ 2.000.000</option>
            <option value="2000000+">Acima de R$ 2.000.000</option>
          </select>
          <select id="price-range-rent" class="hidden w-full px-4 py-3 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors bg-white">
            <option value="">Qualquer preço</option>
            <option value="5000-10000">R$ 5.000 a R$ 10.000</option>
            <option value="10000-20000">R$ 10.000 a R$ 20.000</option>
            <option value="20000-30000">R$ 20.000 a R$ 30.000</option>
            <option value="30000+">Acima de R$ 30.000</option>
          </select>
        </div>
        
        <div class="md:col-span-3">
          <div class="relative">
            <input 
              type="text" 
              id="search-query"
              name="search-query"
              placeholder="Buscar por bairro, condomínio ou características..."
              class="w-full px-4 py-3 pl-10 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors"
            />
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-gray-400 absolute left-3 top-1/2 -translate-y-1/2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
          </div>
        </div>
        
        <div class="md:col-span-1">
          <button 
            type="button"
            class="w-full bg-c21-gold hover:bg-c21-dark-gold text-white font-medium px-6 py-3 rounded transition-colors duration-200 flex items-center justify-center"
            onclick="showStep(2)"
          >
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
            </svg>
            Buscar Imóveis
          </button>
        </div>
      </form>

      <!-- Step 2: Contact Form (Hidden by default) -->
      <form id="property-search-step2" class="hidden relative">
        <div class="text-center mb-6">
          <h3 class="text-xl font-bold text-c21-grey mb-2">Encontraremos o Imóvel Perfeito para Você</h3>
          <p class="text-c21-medium-grey mb-2">
            Nossa equipe irá pesquisar imóveis exclusivos, propriedades em lançamento e opções que melhor atendem seus critérios.
          </p>
          <p class="text-c21-medium-grey italic text-sm">
            Apresentaremos uma seleção personalizada com 3 a 5 propriedades ideais para suas necessidades.
          </p>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 max-w-2xl mx-auto">
          <div>
            <label for="name" class="block text-sm font-medium text-c21-grey mb-2">Nome Completo</label>
            <input 
              type="text" 
              id="name" 
              name="name" 
              required
              class="w-full px-4 py-3 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors"
              placeholder="Seu nome completo"
            />
          </div>
          
          <div>
            <label for="phone" class="block text-sm font-medium text-c21-grey mb-2">Telefone</label>
            <input 
              type="tel" 
              id="phone" 
              name="phone" 
              required
              class="w-full px-4 py-3 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors"
              placeholder="(11) 99999-9999"
            />
          </div>

          <div class="md:col-span-1">
            <label for="best-time" class="block text-sm font-medium text-c21-grey mb-2">Melhor horário para contato</label>
            <select 
              id="best-time" 
              name="best-time" 
              required
              class="w-full px-4 py-3 rounded border border-gray-200 focus:border-c21-gold focus:ring focus:ring-c21-gold/20 transition-colors"
            >
              <option value="">Selecione o horário</option>
              <option value="morning">Manhã (9h - 12h)</option>
              <option value="afternoon">Tarde (13h - 17h)</option>
              <option value="evening">Noite (17h - 19h)</option>
            </select>
          </div>

          <div class="md:col-span-2 flex gap-4">
            <button 
              type="button"
              class="flex-1 bg-white border border-c21-grey/20 hover:border-c21-gold text-c21-grey font-medium px-6 py-3 rounded transition-colors duration-200"
              onclick="showStep(1)"
            >
              Voltar
            </button>
            <button 
              type="submit"
              class="flex-1 bg-c21-gold hover:bg-c21-dark-gold text-white font-medium px-6 py-3 rounded transition-colors duration-200"
            >
              Encontrar Imóveis
            </button>
          </div>
          
          <!-- Messages (Hidden by default) -->
          <div id="form-success-message" class="md:col-span-2 mt-4 p-4 bg-green-50 border border-green-200 rounded-lg text-green-800 hidden">
            <div class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-green-500 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
              </svg>
              <span class="font-medium">Tudo certo! Entraremos em contato em breve.</span>
            </div>
          </div>
        </div>
      </form>
    </div>
    
    <!-- Featured Properties Section -->
    <div class="mt-16">
      <h3 class="text-2xl font-bold text-c21-grey mb-6">Imóveis em Destaque</h3>
      
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        <!-- Property Card 1 -->
        <div class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300 animate-on-scroll">
          <div class="relative">
            <img 
              src="https://imgs.kenlo.io/VWRCUkQ2Tnp3d1BJRDBJVe1szkhnWr9UfpZS9ftWwjXgr7v5Znen3XVcMHllDVRJJeIbi3YwVYEtu1k45+VMyBIXztE3RKPvnQyJ3pi3xNOevF3JyYHa553-2ufbbNzc2YYm0ZLLCE+ukIx9e-04C2tBStBFFDj3YKauLFxpoRyGtkvva6F0HDcOxToUjBdpwVuDAIqv8k9v9QulKM7ZsjLVZ7LHKlhHSdxHR9o47l9MqBG1U1ByqR9Q9JG2ozrBZrT0PpW61WIYQklkpNCiTqzwi82OZ5htFvpqLHoC91cXWaoQmvqIQKNz8k8NqufBERmHlELVhPYgYMf+HIVXmqEGngvcGLtH6U3ulNHBgaWkOU-XYgA--e6e8fe2NPihSv-0IDjht5gX84-VLthQa5qoCiQJEGZ4M3BJqRO29rnGsACzOmqH.jpg" 
              alt="Casas a Venda Alphaville" 
              class="w-full h-48 object-cover"
            />
            <div class="absolute top-0 right-0 bg-c21-gold text-white text-sm px-3 py-1 rounded-bl-lg font-medium">Venda</div>
          </div>
          <div class="p-4">
            <h4 class="text-lg font-semibold text-c21-grey">Casas a Venda em Alphaville</h4>
            <p class="text-c21-medium-grey text-sm">Tamboré e Residenciais</p>
            
            <div class="flex items-center mt-2 space-x-4 text-sm text-c21-medium-grey">
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                87 Imóveis
              </div>
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                3 a 5 Suítes
              </div>
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                Melhores Condomínios
              </div>
            </div>
            
            <div class="mt-4 flex justify-between items-center">
              <span class="text-c21-gold font-bold text-xl">Encontre sua Casa</span>
              <a href="https://www.c21alpha.com.br/imoveis/a-venda/casa" target="_blank" rel="noopener noreferrer" class="text-c21-link-blue hover:text-c21-link-light-blue transition-colors text-sm font-medium">
                Ver Opções →
              </a>
            </div>
          </div>
        </div>
        
        <!-- Property Card 2 -->
        <div class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300 animate-on-scroll">
          <div class="relative">
            <img 
              src="https://imgs.kenlo.io/VWRCUkQ2Tnp3d1BJRDBJVe1szkhnWr9UfpZS9ftWwjXgr7v5Znen3XVcMHllDVRJJeIbi3YwVYEtu0BW+ZdSvhQDieUmX42TmyvWxoes6t2avRSP3rbbtK-30s-adZvjkZ567LP9JXWzq5JrH+B2AVEmWPheFDXdfbulMVYAnWmepGfGcpBMXTdb1C0XrS19mniSVIaS8lg68irgFKrVtgLQELLGOgZkL+BHR9o47l9MqBG1U1ByqR9Q9JG2ozrBZrT0PpW61WIYQklkpNCiTqzwi82OZ5htFvpqLHoC91cXWaoQmvqIQKNz8k8NqufBERmHlELVhPYgYMf+HIVXmqEGngvcH7VN6RzqlNWUgqSrPEyHMlNr9rmd+aC4aaz0TqH4cjjho5wN4ojKNo8Jddj3SDQVc3pnKDNWuUC5-6mZjE3ubXSK+lVHVhONg99q7HYkYAQDspFO7Seqxg==.jpg" 
              alt="Apartamentos a Venda Alphaville" 
              class="w-full h-48 object-cover"
            />
            <div class="absolute top-0 right-0 bg-c21-gold text-white text-sm px-3 py-1 rounded-bl-lg font-medium">Venda</div>
          </div>
          <div class="p-4">
            <h4 class="text-lg font-semibold text-c21-grey">Apartamentos a Venda</h4>
            <p class="text-c21-medium-grey text-sm">Barueri e Santana de Parnaíba</p>
            
            <div class="flex items-center mt-2 space-x-4 text-sm text-c21-medium-grey">
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                31 Imóveis
              </div>
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                1 a 3 Quartos
              </div>
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                Condomínios Clube
              </div>
            </div>
            
            <div class="mt-4 flex justify-between items-center">
              <span class="text-c21-gold font-bold text-xl">Faça sua Busca</span>
              <a href="https://www.c21alpha.com.br/imoveis/a-venda/apartamento" target="_blank" rel="noopener noreferrer" class="text-c21-link-blue hover:text-c21-link-light-blue transition-colors text-sm font-medium">
                Ver Opções →
              </a>
            </div>
          </div>
        </div>
        
        <!-- Property Card 3 -->
        <div class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg transition-shadow duration-300 animate-on-scroll">
          <div class="relative">
            <img 
              src="https://imgs.kenlo.io/VWRCUkQ2Tnp3d1BJRDBJVe1szkhnWr9UfpZS9ftWwjXgr7v5Znen3XVcMHllDVRJJeIbi3YwVYEtu0tLj45Q1EsGspY8BqaEoCCG75uV5faLk12GqZ7Zlr3yzODCcJ6OxYwT8471FwSDrqs+Yfx3aGVrZOlLXUCyf43eN1sMmhqLqFTpcKpkaTNU3lEdiklZ+mWJeKWxx2Ma8S-9FPPxii3cTPnpNlVgDrMNAdIz7EIJ8RC9W0J8p0oF7Jq1qTLdaOenJpi9yWxNWAZ8vJq+TqjzwtiOK59nSeUyO3cb51URUaJf1-aKA+9jrwcLou-TCwSW3hrDkec3f8vtBcFOnqYKkxDHHLFN6E-pl9fBhaL-bkyHMwU+9LqeqvvkbvikEKCnJCWPhZcX44-BapgLd9vjXzZkXmZ-IXdBu12x6Kvlr0XmLCqU8xBJWEGSn45y9DdlbgpOrcNW7y-n.jpg" 
              alt="Apartamento para alugar Alphaville" 
              class="w-full h-48 object-cover"
            />
            <div class="absolute top-0 right-0 bg-c21-highlight-red text-white text-sm px-3 py-1 rounded-bl-lg font-medium">Locação</div>
          </div>
          <div class="p-4">
            <h4 class="text-lg font-semibold text-c21-grey">Imóveis para Alugar</h4>
            <p class="text-c21-medium-grey text-sm">Apartamentos e Casas</p>
            
            <div class="flex items-center mt-2 space-x-4 text-sm text-c21-medium-grey">
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                38 Imóveis
              </div>
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                2 a 5 Quartos
              </div>
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6" />
                </svg>
                Em Condomínios
              </div>
            </div>
            
            <div class="mt-4 flex justify-between items-center">
              <span class="text-c21-gold font-bold text-xl">Alugue Fácil</span>
              <a href="https://www.c21alpha.com.br/imoveis/para-alugar" target="_blank" rel="noopener noreferrer" class="text-c21-link-blue hover:text-c21-link-light-blue transition-colors text-sm font-medium">
                Ver Opções →
              </a>
            </div>
          </div>
        </div>
      </div>
      
      <div class="text-center mt-10">
        <a 
          href="https://www.c21alpha.com.br/" 
          target="_blank" 
          rel="noopener noreferrer"
          class="inline-flex items-center px-6 py-3 bg-white border border-c21-gold text-c21-gold rounded hover:bg-c21-gold hover:text-white transition-colors duration-200"
        >
          Ver Todos os Imóveis
          <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </a>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Remove _gl parameter from URLs when clicking links to c21alpha.com.br
    const removeGlParameter = () => {
      if (window.location.search.includes('_gl=')) {
        const url = new URL(window.location.href);
        url.searchParams.delete('_gl');
        window.history.replaceState({}, document.title, url.pathname + url.search);
      }
    };

    // Add click event listeners to all c21alpha.com.br links
    const c21Links = document.querySelectorAll('a[href*="c21alpha.com.br"]');
    c21Links.forEach(link => {
      link.addEventListener('click', () => {
        // Small delay to ensure the navigation happens first
        setTimeout(removeGlParameter, 100);
      });
    });

    // Also run on page load in case someone arrives with _gl parameter
    removeGlParameter();
    // Add showStep to window
    (window as any).showStep = (step: number) => {
      const step1Form = document.getElementById('property-search-step1');
      const step2Form = document.getElementById('property-search-step2');
      
      if (step === 1) {
        step1Form?.classList.remove('hidden');
        step2Form?.classList.add('hidden');
      } else {
        step1Form?.classList.add('hidden');
        step2Form?.classList.remove('hidden');
        // Scroll to position the title in view
        const step2Title = step2Form?.querySelector('h3');
        if (step2Title) {
          step2Title.scrollIntoView({ behavior: 'smooth', block: 'center' });
        } else {
          step2Form?.scrollIntoView({ behavior: 'smooth', block: 'start' });
        }
      }
    };

    // Handle form submission
    const step1Form = document.getElementById('property-search-step1');
    const step2Form = document.getElementById('property-search-step2');
    
    // Prevent form submission on ENTER key in Step 1
    step1Form?.addEventListener('keydown', (e: KeyboardEvent) => {
      if (e.key === 'Enter') {
        e.preventDefault();
        // Optionally, we can move to step 2 when ENTER is pressed
        // (window as any).showStep(2);
      }
    });
    
    step2Form?.addEventListener('submit', async (e: Event) => {
      e.preventDefault();
      
      // Get form data from step 1
      const propertyType = document.getElementById('property-type') as HTMLSelectElement;
      const neighborhood = document.getElementById('neighborhood') as HTMLSelectElement;
      const transactionType = document.querySelector('input[name="transaction-type"]:checked') as HTMLInputElement;
      const priceRangeBuy = document.getElementById('price-range-buy') as HTMLSelectElement;
      const priceRangeRent = document.getElementById('price-range-rent') as HTMLSelectElement;
      const searchQuery = document.getElementById('search-query') as HTMLInputElement;
      
      // Get form data from step 2
      const name = document.getElementById('name') as HTMLInputElement;
      const phone = document.getElementById('phone') as HTMLInputElement;
      const bestTime = document.getElementById('best-time') as HTMLSelectElement;
      
      // Determine which price range to use based on transaction type
      const priceRange = transactionType.value === 'buy' ? priceRangeBuy.value : priceRangeRent.value;
      
      // Get stored UTM parameters
      const utmParameters = window.getStoredUtmParameters ? window.getStoredUtmParameters() : {};

      // Create payload
      const payload = {
        propertyType: propertyType?.value || '',
        neighborhood: neighborhood?.value || '',
        transactionType: transactionType?.value || '',
        priceRange: priceRange || '',
        searchQuery: searchQuery?.value || '',
        name: name?.value || '',
        phone: phone?.value || '',
        bestTime: bestTime?.value || '',
        source: 'property-search-form',
        timestamp: new Date().toISOString(),
        ...utmParameters
      };
      
      try {
        // Send data to webhook
        const response = await fetch('https://workflowwebhook.prospectz.com.br/webhook/c21-lp-buscaimoveis', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(payload)
        });
        
        if (response.ok) {
          // Push to dataLayer for GTM tracking
          // @ts-ignore - Ignore TypeScript errors for dataLayer
          window.dataLayer = window.dataLayer || [];
          // @ts-ignore - Ignore TypeScript errors for dataLayer
          window.dataLayer.push({
            'event': 'property_search_complete',
            'formSource': 'property-search-form',
            'propertyType': propertyType?.value || '',
            'neighborhood': neighborhood?.value || '',
            'transactionType': transactionType?.value || '',
            'priceRange': priceRange || ''
          });
          
          // Show success message instead of alert
          const successMessage = document.getElementById('form-success-message');
          successMessage?.classList.remove('hidden');
          
          // Hide success message and reset form after 5 seconds
          setTimeout(() => {
            successMessage?.classList.add('hidden');
            (step2Form as HTMLFormElement).reset();
            (window as any).showStep(1);
          }, 5000);
        } else {
          console.error('Error submitting form:', response.statusText);
          // Show error message instead of alert
          const successMessage = document.getElementById('form-success-message');
          successMessage?.classList.add('hidden');
          
          // Create error message element if it doesn't exist
          let errorMessage = document.getElementById('form-error-message');
          if (!errorMessage) {
            errorMessage = document.createElement('div');
            errorMessage.id = 'form-error-message';
            errorMessage.className = 'md:col-span-2 mt-4 p-4 bg-red-50 border border-red-200 rounded-lg text-red-800';
            errorMessage.innerHTML = `
              <div class="flex items-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500 mr-2" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
                <span class="font-medium">Ocorreu um erro ao enviar o formulário. Por favor, tente novamente.</span>
              </div>
            `;
            const formButtons = document.querySelector('.md:col-span-2.flex.gap-4');
            formButtons?.parentNode?.insertBefore(errorMessage, formButtons.nextSibling);
          } else {
            errorMessage.classList.remove('hidden');
          }
          
          // Hide error message after 5 seconds
          setTimeout(() => {
            errorMessage?.classList.add('hidden');
          }, 5000);
        }
      } catch (error) {
        console.error('Error submitting form:', error);
        // Show error message instead of alert
        const successMessage = document.getElementById('form-success-message');
        successMessage?.classList.add('hidden');
        
        // Create error message element if it doesn't exist
        let errorMessage = document.getElementById('form-error-message');
        if (!errorMessage) {
          errorMessage = document.createElement('div');
          errorMessage.id = 'form-error-message';
          errorMessage.className = 'md:col-span-2 mt-4 p-4 bg-red-50 border border-red-200 rounded-lg text-red-800';
          errorMessage.innerHTML = `
            <div class="flex items-center">
              <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 text-red-500 mr-2" viewBox="0 0 20 20" fill="currentColor">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
              </svg>
              <span class="font-medium">Ocorreu um erro ao enviar o formulário. Por favor, tente novamente.</span>
            </div>
          `;
          const formButtons = document.querySelector('.md:col-span-2.flex.gap-4');
          formButtons?.parentNode?.insertBefore(errorMessage, formButtons.nextSibling);
        } else {
          errorMessage.classList.remove('hidden');
        }
        
        // Hide error message after 5 seconds
        setTimeout(() => {
          errorMessage?.classList.add('hidden');
        }, 5000);
      }
    });
    
    // Toggle price range selects
    const priceRangeBuy = document.getElementById('price-range-buy');
    const priceRangeRent = document.getElementById('price-range-rent');
    const optionInputs = document.querySelectorAll('input[name="transaction-type"]');
    const propertyOptions = document.querySelectorAll('.property-option');
    
    optionInputs.forEach((input: Element) => {
      input.addEventListener('change', () => {
        // Update option styling
        propertyOptions.forEach((option: Element) => {
          const parentLabel = option.closest('label');
          const optionValue = (option as HTMLElement).dataset.value;
          
          if ((input as HTMLInputElement).value === optionValue && (input as HTMLInputElement).checked) {
            parentLabel?.classList.add('bg-c21-gold', 'text-white', 'border-c21-gold');
            parentLabel?.classList.remove('bg-white', 'border-gray-200');
          } else {
            parentLabel?.classList.remove('bg-c21-gold', 'text-white', 'border-c21-gold');
            parentLabel?.classList.add('bg-white', 'border-gray-200');
          }
        });
        
        // Toggle price range selects
        if ((input as HTMLInputElement).value === 'buy' && (input as HTMLInputElement).checked) {
          priceRangeBuy?.classList.remove('hidden');
          priceRangeRent?.classList.add('hidden');
        } else if ((input as HTMLInputElement).value === 'rent' && (input as HTMLInputElement).checked) {
          priceRangeBuy?.classList.add('hidden');
          priceRangeRent?.classList.remove('hidden');
        }
      });
    });
    
    // Set initial state
    const checkedInput = document.querySelector('input[name="transaction-type"]:checked');
    if (checkedInput) {
      const value = (checkedInput as HTMLInputElement).value;
      const option = document.querySelector(`.property-option[data-value="${value}"]`);
      const parentLabel = option?.closest('label');
      
      if (parentLabel) {
        parentLabel.classList.add('bg-c21-gold', 'text-white', 'border-c21-gold');
        parentLabel.classList.remove('bg-white', 'border-gray-200');
      }
    }
  });
</script>